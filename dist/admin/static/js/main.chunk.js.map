{"version":3,"file":"static/js/main.chunk.js","sources":["/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/css/admin.index.scss","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/css/index.scss","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/Main.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/SlideOutMenu.js","webpack:///./src/admin/css/admin.index.scss?35de","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/index.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Controls/PBHeader.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/ChangeSystemStatus/ChangeSystemStatus.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/GenerateDocs/GenerateDocs.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/HomePage/HomePage.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/MainInfoPage/MainInfoPage.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/OutPoints/OutPoints.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/PersonalCab/PersonalCab.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/SignInAdmin/SignInAdmin.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/admin/js/Views/WashingPoint/WashingPoint.js","webpack:///./src/css/index.scss?991f","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/js/Redux/actions.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/js/Redux/configureStore.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/js/Redux/reducers.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/js/globalConsts.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/src/js/globalFuncs.js","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/ignored /Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/node_modules/stream-browserify/node_modules/readable-stream/lib util","/Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/ignored /Users/vz/Library/Mobile Documents/com~apple~CloudDocs/PizzaBot/PizzaBot_WebSite/pizzabot/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams util"],"sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".hp_div img {\\n  width: 300px;\\n  height: 240px; }\\n\\n.hp_footer .dx-button-content {\\n  background-color: #dfdfdf; }\\n\\n.hp_footer .dx-button-text {\\n  font-size: 21px;\\n  font-weight: bold; }\\n\\n.sign_in_form .form-group {\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem; }\\n\\n.sign_in_div img {\\n  width: 300px;\\n  height: 240px; }\\n\\n.sign_in_div .dx-button-content {\\n  background-color: #dfdfdf; }\\n\\n.sign_in_div .dx-button-text {\\n  font-size: 21px;\\n  font-weight: bold; }\\n\\n.sign_in_div .sign_in_form img {\\n  width: 36px;\\n  height: 36px; }\\n\\n.sing_in_footer_msg {\\n  margin-left: 0.5rem; }\\n\\n.pc_div img {\\n  width: 180px;\\n  height: 180px;\\n  border-radius: 50%; }\\n\\n.pc_edit_img {\\n  width: 20px;\\n  height: 20px; }\\n\\n.pc_footer_msg {\\n  margin-left: 0.5rem;\\n  font-size: 17.5px; }\\n\\n.pc_edit_bttn_container {\\n  max-width: 15.5em;\\n  min-height: 2em;\\n  margin-left: auto;\\n  margin-right: 0px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pb_header {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 10px 0; }\\n\\n.pb_header_page_title {\\n  color: #27833A;\\n  margin-left: 10px;\\n  font-size: 20px; }\\n\\n.pb_main_menu_button > .dx-button-content {\\n  padding: 8px !important; }\\n\\n.pb_main_menu_button > .dx-button-content > i.dx-icon {\\n  margin-right: 0; }\\n\\n.pb_main_menu_button > .dx-button-content > .dx-button-text {\\n  display: block;\\n  font-size: 10px;\\n  line-height: 8px; }\\n\\n.pb_slideout_container {\\n  height: auto;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%; }\\n\\n.pb_slideout_container .dx-item-content.dx-list-item-content {\\n  padding: 0; }\\n\\n.pb_main_content_holder {\\n  padding: 10px; }\\n\\n.pb_slideout_menu_item {\\n  padding: 10px; }\\n\", \"\"]);\n\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\n// Actions\r\nimport {\r\n\r\n} from 'js/Redux/actions';\r\n\r\n// Dx\r\nimport { LoadPanel } from 'devextreme-react';\r\n\r\n// Local cntrls\r\nimport SlideOutMenu from './SlideOutMenu';\r\n\r\n// Pages\r\nimport HomePage from './js/Views/HomePage/HomePage'\r\nimport SignInAdmin from './js/Views/SignInAdmin/SignInAdmin';\r\n\r\nimport MainInfoPage from './js/Views/MainInfoPage/MainInfoPage';\r\nimport ChangeSystemStatus from './js/Views/ChangeSystemStatus/ChangeSystemStatus';\r\nimport PersonalCab from './js/Views/PersonalCab/PersonalCab';\r\nimport WashingPoint from './js/Views/WashingPoint/WashingPoint';\r\nimport OutPoints from './js/Views/OutPoints/OutPoints';\r\nimport GenerateDocs from './js/Views/GenerateDocs/GenerateDocs';\r\n\r\n// Redux store, actions, helpers.\r\nimport { connect, Provider } from 'react-redux';\r\nimport configureStore from 'js/Redux/configureStore';\r\nimport {\r\n    initContext,\r\n    changeVisibilityOfLoadingPanel,\r\n} from 'js/Redux/actions';\r\n\r\n// global\r\nimport globalFuncs from 'js/globalFuncs';\r\nimport globalConsts from 'js/globalConsts';\r\n\r\nconst store = configureStore();\r\nclass Main extends Component {\r\n    componentDidMount() {\r\n        const {\r\n            dispatch\r\n        } = this.props;\r\n\r\n        dispatch(changeVisibilityOfLoadingPanel(true));\r\n        globalFuncs.sendRequest(\r\n            'GET',\r\n            `/verifyToken?token=${globalFuncs.getToken()}`,\r\n            null,\r\n            (response) => {\r\n                dispatch(initContext(response));\r\n                dispatch(changeVisibilityOfLoadingPanel(false));\r\n            },\r\n            (response) => {\r\n                dispatch(changeVisibilityOfLoadingPanel(false));\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const pages = [\r\n            {page: globalConsts.pages.mainPage, component: MainInfoPage, visible: true, },\r\n            {page: globalConsts.pages.startCleanning, component: WashingPoint, visible: true, },\r\n            {page: globalConsts.pages.changeSystemStatus, component: ChangeSystemStatus, visible: true, },\r\n            {page: globalConsts.pages.outPoints, component: OutPoints, visible: true, },\r\n            {page: globalConsts.pages.sendDocs, component: GenerateDocs, visible: true, },\r\n            {page: globalConsts.pages.personalCab, component: PersonalCab, visible: true, },\r\n\r\n            {button: globalConsts.buttons.logout, action: () => {\r\n                globalFuncs.removeUserSession();\r\n                window.location.reload();\r\n            }, visible: true, },\r\n        ];\r\n\r\n        //Redux\r\n        const {\r\n            isLoading,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <LoadPanel \r\n                    showIndicator={true}\r\n                    message={'Loading...'}\r\n                    visible={false}\r\n                />\r\n\r\n                {!globalFuncs.getToken() &&\r\n                    <HashRouter hashType={'noslash'}>\r\n                        <Redirect from='/' to='/Home' exact />\r\n                        <Route path={'/Home'} component={HomePage} />\r\n                        <Route path={'/SignIn'} component={SignInAdmin} />\r\n                    </HashRouter>\r\n                }\r\n                {globalFuncs.getToken() && \r\n                    <SlideOutMenu \r\n                        menuItems={pages}\r\n                        defaultPage={'Main'}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    context: PropTypes.object.isRequired,\r\n}\r\n\r\nconst MainComponent = connect(globalFuncs.mapStateToProps_global)(Main);\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <MainComponent />\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport {\r\n    Route,\r\n    HashRouter,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Dx\r\nimport {\r\n    SlideOutView,\r\n    Template,\r\n    List,\r\n    ScrollView\r\n} from 'devextreme-react';\r\n\r\n// Local cntrls\r\nimport PBHeader from './js/Controls/PBHeader';\r\n\r\n// global\r\nimport globalConsts from 'js/globalConsts';\r\n\r\nclass SlideOutMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuVisible: false,\r\n            headerButtonMode: globalConsts.headerButtonMode.menu,\r\n            currentPageTitle: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startPage = null;\r\n        for (let page in globalConsts.pages) {\r\n            if (globalConsts.pages[page].path === this.hashRouter.history.location.pathname) {\r\n                startPage = globalConsts.pages[page];\r\n                break;\r\n            }\r\n        }\r\n        if (startPage) {\r\n            this.setState({ currentPageTitle: startPage.title });\r\n        }\r\n\r\n        this.hashRouter.history.pizzabot = {\r\n            history: []\r\n        };\r\n\r\n        this.hashRouter.history.pizzabot.push = (params) => {\r\n            if (!params.page) {\r\n                return;\r\n            }\r\n\r\n            let setStateData = {};\r\n\r\n            let t = params.target || globalConsts.pageTarget.blank;\r\n            if (t === globalConsts.pageTarget.root) {\r\n                this.hashRouter.history.pizzabot.history = [];\r\n                setStateData.headerButtonMode = globalConsts.headerButtonMode.menu;\r\n            }\r\n            else if (t === globalConsts.pageTarget.blank) {\r\n                this.hashRouter.history.pizzabot.history.push({\r\n                    pathname: this.hashRouter.history.location.pathname,\r\n                    title: this.state.currentPageTitle,\r\n                    state: params.currentPageState\r\n                });\r\n                setStateData.headerButtonMode = globalConsts.headerButtonMode.back;\r\n            }\r\n\r\n            this.hashRouter.history.push({\r\n                pathname: params.page.path,\r\n                state: params.state\r\n            });\r\n\r\n            setStateData.currentPageTitle = params.page.title;\r\n            this.setState(setStateData);\r\n        };\r\n\r\n        this.hashRouter.history.pizzabot.canBack = () => {\r\n            return this.hashRouter.history.pizzabot.history.length > 0;\r\n        };\r\n\r\n        this.hashRouter.history.pizzabot.back = () => {\r\n            if (this.hashRouter.history.pizzabot.canBack()) {\r\n                let prevPage = this.hashRouter.history.pizzabot.history.pop();\r\n                this.setState({ currentPageTitle: prevPage.title });\r\n                this.hashRouter.history.push({\r\n                    pathname: prevPage.pathname,\r\n                    state: prevPage.state\r\n                });\r\n\r\n                if (!this.hashRouter.history.pizzabot.canBack()) {\r\n                    this.setState({ headerButtonMode: globalConsts.headerButtonMode.menu });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    show = () => {\r\n        this.setState({ menuVisible: true });\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({ menuVisible: false });\r\n    }\r\n\r\n    menuItemClick = (e) => {\r\n        this.hashRouter.history.pizzabot.push({\r\n            page: e.page,\r\n            target: globalConsts.pageTarget.root\r\n        });\r\n        this.hide();\r\n    }\r\n\r\n    headerButtonOnClick = (e) => {\r\n        if (this.state.headerButtonMode === globalConsts.headerButtonMode.menu) {\r\n            this.show();\r\n        }\r\n        else {\r\n            this.hashRouter.history.pizzabot.back();\r\n        }\r\n    }\r\n\r\n    renderListItem = (e) => {\r\n        return (\r\n            <div>\r\n                {e.page && \r\n                    <div \r\n                        onClick={() => { this.menuItemClick(e); }} \r\n                        className={\"pb_slideout_menu_item dx-navigation-item \" + (window.location.hash.indexOf(e.page.path) !== -1 ? 'font-weight-bold' : '')}\r\n                    >\r\n                        {e.page.title}\r\n                    </div>\r\n                }\r\n                {e.button &&\r\n                    <div\r\n                        onClick={() => { e.action(); }}\r\n                        className={\"pb_slideout_menu_item dx-navigation-item\"}\r\n                    > \r\n                        {e.button.title}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter ref={x => this.hashRouter = x}>\r\n                {this.props.defaultPage && \r\n                    <Redirect exact from=\"/\" to={'/' + this.props.defaultPage} />\r\n                }\r\n                <div className=\"pb_slideout_container\">\r\n                    <SlideOutView\r\n                        menuTemplate=\"menu\"\r\n                        contentTemplate=\"content\"\r\n                        menuVisible={this.state.menuVisible}\r\n                        onOptionChanged={(e) => {\r\n                            if (e.name === \"menuVisible\") {\r\n                                this.setState({ menuVisible: e.value });\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Template name=\"menu\">\r\n                            <List\r\n                                dataSource={this.props.menuItems.filter(item => item.visible)}\r\n                                itemRender={this.renderListItem}\r\n                                width=\"350px\"\r\n                            />\r\n                        </Template>\r\n\r\n                        <Template name=\"content\">\r\n                            <div className=\"d-flex flex-column h-100\">\r\n                                <PBHeader\r\n                                    buttonIcon={this.state.headerButtonMode}\r\n                                    onGoToPageClick={this.headerButtonOnClick}\r\n                                    title={this.state.currentPageTitle}\r\n                                />\r\n                                <ScrollView>\r\n                                    <div className=\"pb_main_content_holder\">\r\n                                        {this.props.menuItems.map((e, i) => {\r\n                                            if (e.page) {\r\n                                                return <Route exact key={i} path={e.page.path} component={e.component} />\r\n                                            }\r\n                                            return <> </>\r\n                                        })}\r\n                                    </div>\r\n                                </ScrollView>\r\n                            </div>\r\n                        </Template>\r\n                    </SlideOutView>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nSlideOutMenu.propTypes = {\r\n    defaultPage: PropTypes.string,\r\n    menuItems: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default SlideOutMenu;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./admin.index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./admin.index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./admin.index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'react-app-polyfill/ie11';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./Main\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport 'css/index.scss';\r\nimport 'admin/css/admin.index.scss';\r\n\r\nReactDOM.render(\r\n    <Root />,\r\n    document.getElementById(\"root_reactapp\")\r\n);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Dx\nimport {\n    Button\n} from 'devextreme-react';\n\n// global\nimport globalConsts from 'js/globalConsts';\n\nclass PBHeader extends React.Component {\n    render() {\n        return (\n            <header className={'pb_header'}>\n                <Button \n                    className={this.props.buttonIcon === globalConsts.headerButtonMode.menu ? 'pb_main_menu_button' : ''}\n                    icon={this.props.buttonIcon}\n                    onClick={this.props.onGoToPageClick}\n                    text={this.props.buttonIcon === globalConsts.headerButtonMode.menu ? 'MENU' : ''}\n                />\n\n                <div className={'pb_header_page_title'}>{'PizzaBot - AdminPanel: ' + this.props.title}</div>\n            </header>\n        )\n    }\n}\n\nPBHeader.propTypes = {\n    buttonIcon: PropTypes.string.isRequired,\n    onGoToPageClick: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n}\n\nexport default PBHeader;","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass ChangeSystemStatus extends React.Component {\n    render() {\n        return (\n            <h1>ChangeSystemStatus</h1>\n        )\n    }\n}\n\nChangeSystemStatus = connect(globalFuncs.mapStateToProps_global)(ChangeSystemStatus);\nexport default ChangeSystemStatus;","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass GenerateDocs extends React.Component {\n    render() {\n        return (\n            <div>GenerateDocs</div>\n        )\n    }\n}\n\nGenerateDocs = connect(globalFuncs.mapStateToProps_global)(GenerateDocs);\nexport default GenerateDocs;","import React from 'react';\n\n// Dx\nimport { Button } from 'devextreme-react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport {\n    goToPage,\n    changeVisibilityOfLoadingPanel,\n} from 'js/Redux/actions';\n\n// Global\nimport globalFuncs from 'js/globalFuncs';\n\nclass HomePage extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.welcomeMsg = 'Добро пожаловать в административную панель PizzaBot';\n        this.forStartWorkMsg = 'Для начала работы, пожалуйста, авторизуйтесь';\n        this.supportMsg = 'Для получения логина и пароля обратитесь к администратору';\n\n        this.handleGoToSignInPage = this.handleGoToSignInPage.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            dispatch\n        } = this.props;\n        dispatch(changeVisibilityOfLoadingPanel(false));\n    }\n\n    handleGoToSignInPage() {\n        const {\n            dispatch \n        } = this.props;\n\n        dispatch(goToPage('SignIn'));\n    }\n\n    render() {\n        return (\n            <>\n                <div className={'text-center mt-5 mb-4 hp_div'}>\n                    <h3 className={'mb-3'}>{this.welcomeMsg}</h3>\n                    <div className={'mb-3'}> \n                        {true && \n                            <img \n                                src={'/themes/images/NoImageIcon.png'} \n                                alt={'No image'}\n                            />\n                        }\n                        {false &&\n                            <img alt={'Welcome image'}/>\n                        }\n                    </div>\n                    <h5 className={'mb-4'}>{this.forStartWorkMsg}</h5>\n                    <h5>{this.supportMsg}</h5>\n                </div>\n                <div className={'hp_footer text-center'}>\n                    <Button \n                        onClick={this.handleGoToSignInPage} \n                        text={'Начать работу'}\n                        height={'50px'}\n                        width={'80%'}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nHomePage = connect(globalFuncs.mapStateToProps_global)(HomePage)\nexport default HomePage;","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass MainInfoPage extends React.Component {\n    render() {\n        return (\n            <h1>MAIN PAGE</h1>\n        )\n    }\n}\n\nMainInfoPage = connect(globalFuncs.mapStateToProps_global)(MainInfoPage);\nexport default MainInfoPage;","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass OutPoints extends React.Component {\n    render() {\n        return (\n            <div>OutPoints</div>\n        )\n    }\n}\n\nOutPoints = connect(globalFuncs.mapStateToProps_global)(OutPoints);\nexport default OutPoints;\n","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport {\n    initContext,\n    changeVisibilityOfLoadingPanel,\n    clearAllLoadingPanels\n} from 'js/Redux/actions';\n\n// Dx\nimport { \n    TextBox\n} from 'devextreme-react';\nimport validationEngine from 'devextreme/ui/validation_engine';\nimport {\n    Validator,\n    RequiredRule,\n    CompareRule,\n    EmailRule,\n    PatternRule,\n    StringLengthRule,\n    RangeRule,\n    NumericRule\n} from 'devextreme-react/validator';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass PersonalCab extends React.Component {\n    constructor(props){\n        super(props);\n\n        const {\n            context\n        } = this.props;\n\n        this.state = {\n            isEditMode: false,\n\n            User: context.User,\n            pwd: {}\n        }\n\n        this.handleEditPersonalInfo = this.handleEditPersonalInfo.bind(this);\n        this.handleChangeNameField = this.handleChangeNameField.bind(this);\n        this.handleChangeSNameField = this.handleChangeSNameField.bind(this);\n        this.handleChangeLNameField = this.handleChangeLNameField.bind(this);\n        this.handleChangeEmailField = this.handleChangeEmailField.bind(this);\n        this.handleChangePhoneField = this.handleChangePhoneField.bind(this);\n\n        this.handleChangeOldPwd = this.handleChangeOldPwd.bind(this);\n        this.handleChangeNewPwd = this.handleChangeNewPwd.bind(this);\n        this.handleChangeAcceptNewPwd = this.handleChangeAcceptNewPwd.bind(this);\n\n        this.handleFinishEditing = this.handleFinishEditing.bind(this);\n    }\n\n    handleFinishEditing() {\n        this.setState((state, props) => {\n            return {\n                isEditMode: false,\n                pwd: {},\n                User: props.context.User,\n            }\n        })\n    }\n\n    handleEditPersonalInfo() {\n        if (this.state.isEditMode) {\n            var allFieldValidation = validationEngine.validateGroup();\n            if (!allFieldValidation.isValid) return;\n\n            const {\n                dispatch\n            } = this.props;\n            dispatch(changeVisibilityOfLoadingPanel(true));\n\n            const {\n                User,\n                pwd\n            } = this.state;\n\n            globalFuncs.sendRequest(\n                'POST',\n                '/users/update',\n                {\n                    refid: User.RefID,\n                    userfn: User.FirstName,\n                    usersn: User.SecondName,\n                    userln: User.LastName,\n                    useremail: User.Email,\n                    userphone: User.Phone,\n                    oldpwd: pwd.oldPwd,\n                    execby: User.FirstName + User.LastName,\n                },\n                (response) => {\n                    if (response && response.isSuccess) {\n                        const {\n                            User\n                        } = this.state;\n                        dispatch(initContext({\n                            context: {\n                                User,\n                            }\n                        }));\n                    }\n                    dispatch(changeVisibilityOfLoadingPanel(false));\n                },\n                (response) => {\n                    dispatch(changeVisibilityOfLoadingPanel(false));\n                }\n            )\n        }\n\n        this.setState((state) => {\n            const {\n                isEditMode\n            } = state;\n\n            return {\n                isEditMode: !isEditMode\n            }\n        })\n    }\n    \n    //#region Change events\n\n    handleChangeNameField(args) {\n        this.setState((state) => {\n            var {\n                User\n            } = state;\n            User = Object.assign({}, User, {\n                FirstName: args.value,\n            });\n            return {\n                User\n            }\n        });\n    }\n\n    handleChangeSNameField(args) {\n        this.setState((state) => {\n            var {\n                User\n            } = state;\n            User = Object.assign({}, User, {\n                SecondName: args.value,\n            });\n            return {\n                User\n            }\n        });\n    }\n\n    handleChangeLNameField(args) {\n        this.setState((state) => {\n            var {\n                User\n            } = state;\n            User = Object.assign({}, User, {\n                LastName: args.value,\n            });\n            return {\n                User\n            }\n        });\n    }\n\n    handleChangeEmailField(args) {\n        this.setState((state) => {\n            var {\n                User\n            } = state;\n            User = Object.assign(User, {\n                Email: args.value,\n            });\n            return {\n                User\n            }\n        });\n    }\n\n    handleChangePhoneField(args) {\n        this.setState((state) => {\n            var {\n                User\n            } = state;\n            User = Object.assign(User, {\n                Phone: args.value,\n            });\n            return {\n                User\n            }\n        });\n    }\n\n    //#region Change pwd\n\n    handleChangeOldPwd(args) {\n        this.setState((state) => {\n            var {\n                pwd\n            } = state;\n            pwd = Object.assign(pwd, {\n                oldPwd: args.value\n            });\n            return {\n                pwd,\n            }\n        })\n    }\n\n    handleChangeNewPwd(args) {\n        this.setState((state) => {\n            var {\n                pwd\n            } = state;\n            pwd = Object.assign(pwd, {\n                newPwd: args.value\n            });\n            return {\n                pwd,\n            }\n        })\n    }\n\n    handleChangeAcceptNewPwd(args) {\n        this.setState((state) => {\n            var {\n                pwd\n            } = state;\n            pwd = Object.assign(pwd, {\n                checkNewPwd: args.value\n            });\n            return {\n                pwd,\n            }\n        })\n    }\n\n    //#endregion\n\n    //#endregion\n\n    render() {\n        const {\n            isEditMode,\n            User,\n            pwd,\n        } = this.state;\n\n        const {\n            FirstName,\n            SecondName,\n            RoleName\n        } = this.props.context.User;\n\n        return (\n            <> \n                <div className={'text-center mt-2 mb-4 pc_div'}>\n                    <div className={'mb-3'}> \n                        {true && \n                            <img \n                                src={'/themes/images/NoAvatarImage.png'} \n                                alt={'No image'}\n                            />\n                        }\n                        {false &&\n                            <img alt={'Welcome image'}/>\n                        }\n                    </div>\n                    <h3 className={'font-weight-bold'}>{FirstName + ' ' + SecondName}</h3>\n                    <h5 className={'text-muted'}>{RoleName}</h5>\n                </div>\n                <div className={'pc_edit_bttn_container'}>\n                    <div \n                        className={'row justify-content-center'}\n                        onClick={this.handleEditPersonalInfo}\n                    >\n                        <div className={'col-1 text-right pr-0'}>\n                            <img \n                                className={'mt-1 pc_edit_img'}\n                                src={isEditMode \n                                    ? '/themes/images/AcceptIcon.png'\n                                    : '/themes/images/EditIcon.png'\n                                }\n                                alt={'Key'}\n                            />\n                        </div>\n                        <div className={'col-md-2 col-6 text-right pc_footer_msg'}>\n                            <label className={'form-text text-muted'}>\n                                {isEditMode ? 'Применить' : 'Редактировать'}\n                            </label>\n                        </div>\n                    </div>\n                    {isEditMode && \n                        <div \n                            className={'row justify-content-center'}\n                            onClick={this.handleFinishEditing}\n                        >\n                            <div className={'col-1 text-right pr-0'}>\n                                <img \n                                    className={'mt-1 pc_edit_img'}\n                                    src={'themes/images/CloseIcon.png'}\n                                    alt={'Key'}\n                                />\n                            </div>\n                            <div className={'col-md-2 col-6 text-right pc_footer_msg'}>\n                                <label className={'form-text text-muted'}>\n                                    {'Закрыть'}\n                                </label>\n                            </div>\n                        </div>\n                    }   \n                </div>\n                <hr className={'mt-1'} />\n                <div className={'pc_main_content'}>\n                    <div className={'form-group row'}>\n                        <label className={'col-3 col-form-label'}>Имя</label>\n                        <div className={'col-9'}>\n                            <TextBox \n                                readOnly={!isEditMode}\n                                value={User.FirstName}\n                                mode={'text'}\n                                placeholder={'Введите имя...'}\n                                onValueChanged={this.handleChangeNameField}\n                            > \n                                <Validator>\n                                    <RequiredRule message={'Имя пользователя обязательно для заполнения'} />\n                                </Validator>\n                            </TextBox>\n                        </div>\n                    </div>\n                    <div className={'form-group row'}>\n                        <label className={'col-3 col-form-label'}>Фамилия</label>\n                        <div className={'col-9'}>\n                            <TextBox \n                                readOnly={!isEditMode}\n                                value={User.SecondName}\n                                mode={'text'}\n                                placeholder={'Введите фамилию...'}\n                                onValueChanged={this.handleChangeSNameField}\n                            >\n                                <Validator>\n                                    <RequiredRule message={'Фамилия пользователя обязательно для заполнения'} />\n                                </Validator>\n                            </TextBox>\n                        </div>\n                    </div>\n                    <div className={'form-group row'}>\n                        <label className={'col-3 col-form-label'}>Отчество</label>\n                        <div className={'col-9'}>\n                            <TextBox \n                                readOnly={!isEditMode}\n                                value={User.LastName}\n                                mode={'text'}\n                                placeholder={'Введите отчество (если имеется)...'}\n                                onValueChanged={this.handleChangeLNameField}\n                            />\n                        </div>\n                    </div>\n                    <div className={'form-group row'}>\n                        <label className={'col-3 col-form-label'}>Email</label>\n                        <div className={'col-9'}>\n                            <TextBox \n                                readOnly={!isEditMode}\n                                value={User.Email}\n                                mode={'email'}\n                                placeholder={'Введите email...'}\n                                onValueChanged={this.handleChangeEmailField}\n                            >\n                                <Validator>\n                                    <RequiredRule message={'Email пользователя обязательно для заполнения'} />\n                                </Validator>\n                            </TextBox>\n                        </div>\n                    </div>\n                    <div className={'form-group row'}>\n                        <label className={'col-3 col-form-label'}>Телефон</label>\n                        <div className={'col-9'}>\n                            <TextBox \n                                readOnly={!isEditMode}\n                                value={User.Phone}\n                                mode={'tel'}\n                                mask={'+7 (000) 000-00-00'}\n                                placeholder={'Введите номер телефона...'}\n                                onValueChanged={this.handleChangePhoneField}\n                            >\n                                <Validator>\n                                    <RequiredRule message={'Номер телефона пользователя обязательно для заполнения'} />\n                                </Validator>\n                            </TextBox>\n                        </div>\n                    </div>\n                    {isEditMode && \n                        <>\n                            <div className={'form-group row'}>\n                                <label className={'col-3 col-form-label'}>Текущий</label>\n                                <div className={'col-9'}>\n                                    <TextBox \n                                        mode={'password'}\n                                        placeholder={'Введите старый пароль...'}\n                                        onValueChanged={this.handleChangeOldPwd}\n                                    >\n                                        <Validator>\n                                            <RequiredRule message={'Пароль пользователя обязательно для заполнения'} />\n                                        </Validator>\n                                    </TextBox>\n                                </div>\n                            </div>\n                            <div className={'form-group row'}>\n                                <label className={'col-3 col-form-label'}>Новый</label>\n                                <div className={'col-9'}>\n                                    <TextBox \n                                        mode={'password'}\n                                        placeholder={'Введите новый пароль...'}\n                                        value={pwd.newPwd}\n                                        onValueChanged={this.handleChangeNewPwd} />\n                                </div>\n                            </div>\n                            {pwd.newPwd && \n                                <div className={'form-group row'}>\n                                    <label className={'col-3 col-form-label'}>Подтвердить</label>\n                                    <div className={'col-9'}>\n                                        <TextBox \n                                            mode={'password'}\n                                            placeholder={'Подтвердите новый пароль...'}\n                                            value={pwd.checkNewPwd}\n                                            onValueChanged={this.handleChangeAcceptNewPwd}\n                                        >\n                                            <Validator>\n                                                <CompareRule message={'Новые пароли не совпадают'} comparisonTarget={() => { return pwd.newPwd === pwd.checkNewPwd }} />\n                                            </Validator>\n                                        </TextBox>\n                                    </div>\n                                </div>\n                            }\n                        </>\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\nPersonalCab = connect(globalFuncs.mapStateToProps_global)(PersonalCab);\nexport default PersonalCab;\n\n","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport {\n    changeVisibilityOfLoadingPanel,\n    initContext\n} from 'js/Redux/actions';\n\n// Global\nimport globalFuncs from 'js/globalFuncs';\n\n// Dx\nimport { \n    TextBox,\n    Button,\n} from 'devextreme-react'\n\nclass SignInAdmin extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            login: '',\n            password: '',\n\n            showErrorMsg: false,\n        }\n\n        this.handleLoginChanged = this.handleLoginChanged.bind(this);\n        this.handlePasswordChanged = this.handlePasswordChanged.bind(this);\n        this.handleSignInClick = this.handleSignInClick.bind(this);\n    }\n\n    handleLoginChanged(args) {\n        this.setState(() => {\n            return {\n                login: args.value,\n            }\n        });\n    }\n\n    handlePasswordChanged(args) {\n        this.setState(() => {\n            return {\n                password: args.value,\n            }\n        })\n    }\n\n    handleSignInClick() {\n        const {\n            login,\n            password\n        } = this.state;\n\n        const {\n            dispatch\n        } = this.props;\n\n        dispatch(changeVisibilityOfLoadingPanel(true));\n        globalFuncs.sendRequest(\n            'POST',\n            '/users/signin',\n            {\n                login,\n                password\n            },\n            (response) => {\n                this.setState(() => {\n                    return {\n                        showErrorMsg: false,\n                    }\n                })\n                dispatch(initContext(response));\n                dispatch(changeVisibilityOfLoadingPanel(false));\n            },\n            (response) => {\n                this.setState(() => {\n                    return {\n                        showErrorMsg: true,\n                    }\n                })\n                dispatch(changeVisibilityOfLoadingPanel(false));\n            }\n        )\n    }\n\n    render() {\n        const {\n            login, \n            password,\n\n            showErrorMsg\n        } = this.state;\n\n        return (\n            <> \n                <div className={'text-center mt-5 mb-4 sign_in_div'}>\n                    <div className={'mb-3'}> \n                        {true && \n                            <img \n                                src={'/themes/images/NoImageIcon.png'} \n                                alt={'No image'}\n                            />\n                        }\n                        {false &&\n                            <img alt={'Welcome image'}/>\n                        }\n                    </div>\n                    <h1>Авторизация</h1>\n                    <div className={'sign_in_form'}>\n                        <div className={'form-group text-left'}>\n                            <label>Номер телефона:</label>\n                            <TextBox\n                                mode={'tel'}\n                                mask={'+7 (000) 000-00-00'}\n                                placeholder={'Введите номер телефона...'}\n                                value={login}\n                                isValid={!showErrorMsg}\n                                onValueChanged={this.handleLoginChanged}\n                                onEnterKey={this.handleSignInClick}\n                            />\n                        </div>\n                        <div className={'form-group text-left mb-4'}>\n                            <label>Пароль:</label>\n                            <TextBox \n                                mode={'password'}\n                                isValid={!showErrorMsg}\n                                placeholder={'Введите пароль...'}\n                                value={password}\n                                onValueChanged={this.handlePasswordChanged}\n                                onEnterKey={this.handleSignInClick}\n                            />\n                        </div>\n                        <Button \n                            onClick={this.handleSignInClick} \n                            text={'Войти'}\n                            height={'50px'}\n                            width={'80%'}\n                        />\n                        <div className={'mt-4 row justify-content-center'}>\n                            <div className={'col-1 text-right pr-0'}>\n                                <img \n                                    className={'mt-1'}\n                                    src={'/themes/images/KeyIcon.png'}\n                                    alt={'Key'}\n                                />\n                            </div>\n                            <div className={'col-md-2 col-6 text-left sing_in_footer_msg'}>\n                                <small className={'form-text text-muted'}>\n                                    Забыли пароль? <br/>\n                                    Обратитесь к администратору\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nSignInAdmin = connect(globalFuncs.mapStateToProps_global)(SignInAdmin);\nexport default SignInAdmin;","import React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// global\nimport globalFuncs from 'js/globalFuncs';\n\nclass WashingPoint extends React.Component {\n    render() {\n        return (\n            <> \n            \n            </>\n        )\n    }\n}\n\nWashingPoint = connect(globalFuncs.mapStateToProps_global)(WashingPoint);\nexport default WashingPoint;","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-5-3!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// global\r\nimport globalFuncs from 'js/globalFuncs';\r\n\r\nexport const CLEAR_ALL_PAGES_DATA = 'CLEAR_ALL_PAGES_DATA';\r\nexport const CLEAR_PAGE_DATA_BY_PAGE_NAME = 'CLEAR_PAGE_DATA_BY_PAGE_NAME';\r\n\r\nexport const GET_PAGE_DATA_BY_PAGE_NAME = 'GET_PAGE_DATA_BY_PAGE_NAME';\r\nexport const INIT_DATA_FOR_PAGE = 'INIT_DATA_FOR_PAGE';\r\n\r\nexport const GO_TO_PAGE = 'GO_TO_PAGE';\r\n\r\nexport const ERROR = 'ERROR';\r\n\r\nexport const LOAD_PANEL_VISIBLE = 'LOAD_PANEL_VISIBLE';\r\nexport const LOAD_PANEL_INVISIBLE = 'LOAD_PANEL_INVISIBLE';\r\nexport const CLEAR_ALL_LOAD_PANELS = 'CLEAR_ALL_LOAD_PANELS';\r\n\r\nexport const INIT_CONTEXT = 'INIT_CONTEXT';\r\n\r\n\r\n//#region Exchange data between pages\r\n\r\nlet dataSource = {};\r\n\r\nexport function clearDataByPageName(pageName) {\r\n    if (dataSource && dataSource[pageName]) {\r\n        delete dataSource[pageName];\r\n\r\n        return {\r\n            type: CLEAR_PAGE_DATA_BY_PAGE_NAME,\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearPagesData() {\r\n    dataSource = {};\r\n    return {\r\n        type: CLEAR_ALL_PAGES_DATA,\r\n    }\r\n}\r\n\r\nexport function getDataByPageName(pageName) {\r\n    return {\r\n        type: GET_PAGE_DATA_BY_PAGE_NAME,\r\n        data: dataSource[pageName],\r\n    }\r\n}\r\n\r\nfunction initPageData(data) {\r\n    return {\r\n        type: INIT_DATA_FOR_PAGE,\r\n        data,\r\n    }\r\n}\r\n\r\nfunction redirectToPage(pageName) {\r\n    return {\r\n        type: GO_TO_PAGE,\r\n        pageName\r\n    }\r\n}\r\n\r\nexport function goToPageTemporary(pageName, data, pageNameSource, dataOfSource, isUnitedWithExistedDataOfTarget = false, isUnitedWithExistedDataOfSource = false) {\r\n    return dispatch => {\r\n        if (data) {\r\n            if (dataSource[pageName] && isUnitedWithExistedDataOfTarget) {\r\n                dataSource[pageName] = Object.assign(\r\n                    dataSource[pageName],\r\n                    data\r\n                );\r\n            } else {\r\n                dataSource[pageName] = data;\r\n            }\r\n        }\r\n\r\n        if (dataOfSource) {\r\n            if (dataSource[pageNameSource] && isUnitedWithExistedDataOfSource) {\r\n                dataSource[pageNameSource] = Object.assign(\r\n                    dataSource[pageNameSource],\r\n                    dataOfSource\r\n                );\r\n            } else {\r\n                dataSource[pageNameSource] = dataOfSource;\r\n            }\r\n        }\r\n\r\n        if (dataSource[pageName]) {\r\n            dispatch(initPageData(dataSource[pageName]));\r\n        }\r\n        dispatch(redirectToPage(pageName));\r\n    }\r\n}\r\n\r\nexport function goToPage(pageName, data, isUnitedWithExistedData = false) {\r\n    return dispatch => {\r\n        if (data) {\r\n            if (dataSource[pageName] && isUnitedWithExistedData) {\r\n                dataSource[pageName] = Object.assign(\r\n                    dataSource[pageName],\r\n                    data\r\n                );\r\n            } else {\r\n                dataSource[pageName] = data;\r\n            }\r\n        }\r\n\r\n        if (dataSource[pageName]) {\r\n            dispatch(initPageData(dataSource[pageName]));\r\n        }\r\n        dispatch(redirectToPage(pageName))\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Load panel\r\n\r\nlet countOfLoaders = 0;\r\n\r\nexport function changeVisibilityOfLoadingPanel(visible) {\r\n    countOfLoaders = visible ? countOfLoaders + 1 : countOfLoaders - 1;\r\n    countOfLoaders = countOfLoaders < 0 ? 0 : countOfLoaders;\r\n    return {\r\n        type: countOfLoaders > 0 ? LOAD_PANEL_VISIBLE : LOAD_PANEL_INVISIBLE\r\n    };\r\n}\r\n\r\nexport function clearAllLoadingPanels(){\r\n    countOfLoaders = 0;\r\n    return {\r\n        type: CLEAR_ALL_LOAD_PANELS,\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Init context\r\n\r\nexport function initContext(data) {\r\n    if (data.token) {\r\n        globalFuncs.setUserSession(data.token);\r\n    }\r\n\r\n    if (data && data.context) {\r\n        return {\r\n            type: INIT_CONTEXT,\r\n            User: data.context.User,\r\n        } \r\n    } else {\r\n        return {\r\n            type: ERROR,\r\n        }\r\n    }\r\n}\r\n\r\n//#endregion\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default function configureStore(preloadedState) {\r\n    return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n    );\r\n}","import { combineReducers } from 'redux';\r\n\r\n//#region Exchange data between page: IMPORT\r\n\r\nimport {\r\n    INIT_DATA_FOR_PAGE,\r\n    GET_PAGE_DATA_BY_PAGE_NAME,\r\n    CLEAR_PAGE_DATA_BY_PAGE_NAME,\r\n    CLEAR_ALL_PAGES_DATA,\r\n\r\n    GO_TO_PAGE,\r\n} from './actions';\r\n\r\n//#endregion\r\n//#region Error initialize: IMPORT\r\n\r\nimport {\r\n    ERROR\r\n} from './actions';\r\n\r\n//#endregion\r\n//#region Load panel visible: IMPORT\r\n\r\nimport {\r\n    LOAD_PANEL_VISIBLE,\r\n    LOAD_PANEL_INVISIBLE,\r\n    CLEAR_ALL_LOAD_PANELS\r\n} from './actions';\r\n\r\n//#endregion\r\n//#region Init context: IMPORT\r\n\r\nimport {\r\n    INIT_CONTEXT,\r\n} from './actions'\r\n\r\n//#endregion\r\n\r\n//#region Exchange data between page\r\n\r\nfunction dataForPage(state = {}, action) {\r\n    switch (action.type) {\r\n        case INIT_DATA_FOR_PAGE:\r\n        case GET_PAGE_DATA_BY_PAGE_NAME:\r\n            return Object.assign({}, state, action.data);\r\n        case CLEAR_ALL_PAGES_DATA:\r\n        case CLEAR_PAGE_DATA_BY_PAGE_NAME:\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction goToPage(state = {}, action) {\r\n    switch (action.type) {\r\n        case GO_TO_PAGE:\r\n            window.location.hash = '#' + action.pageName;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Error initialize\r\n\r\nfunction error(state = 'Here is error!!!', action) {\r\n    switch (action.type) {\r\n        case ERROR:\r\n            const { error } = action.error;\r\n            console.error(error.text);\r\n            return Object.assign({}, state, error);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Load panel visible\r\n\r\nfunction visibilityOfLoadingPanel(state = {isLoading: true}, action) {\r\n    switch(action.type) {\r\n        case LOAD_PANEL_INVISIBLE:\r\n        case CLEAR_ALL_LOAD_PANELS:\r\n            return {\r\n                isLoading: false,\r\n            }\r\n        case LOAD_PANEL_VISIBLE:\r\n            return {\r\n                isLoading: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Init context\r\n\r\nfunction initializedContext(state = {}, action) {\r\n    switch(action.type) {\r\n        case INIT_CONTEXT: {\r\n            delete action['type'];\r\n            return Object.assign(\r\n                state,\r\n                action,\r\n            )\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\nconst rootReducer = combineReducers({\r\n    dataForPage,\r\n    goToPage,\r\n    visibilityOfLoadingPanel,\r\n    initializedContext,\r\n    error,\r\n});\r\n\r\nexport default rootReducer;","var globalConsts = {}\n\n//#region SlideOutMenu\n\nglobalConsts.headerButtonMode = {\n    menu: 'menu',\n    back: 'back',\n};\n\nglobalConsts.pageTarget = {\n    blank: 0,\n    root: 1,\n    current: 2,\n};\n\nglobalConsts.pages = {\n    home: {\n        path: '/Home',\n        title: 'Home'\n    },\n    signIn: {\n        path: '/SignIn',\n        title: 'SignIn',\n    },\n\n    mainPage: {\n        path: '/Main',\n        title: 'Главная страница',\n    },\n    loadProducts: {\n        path: '/LoadProducts',\n        title: 'Работа с запасами',\n    },\n    startCleanning: {\n        path: '/WashPoint',\n        title: 'Запуск мойки',\n    }, \n    changeSystemStatus: {\n        path: '/ChangeSystemStatus',\n        title: 'Включение/Выключение системы',\n    },\n    outPoints: {\n        path: '/OutPoints',\n        title: 'Ячейки выдачи',\n    },\n    sendDocs: {\n        path: '/GenerateDocs', \n        title: 'Отчеты',\n    },\n    personalCab: {\n        path: '/User',\n        title: 'Личный кабинет'\n    },\n};\n\nglobalConsts.buttons = {\n    logout: {\n        title: 'Выйти из системы',\n    }\n};\n\n//#endregion\n\nexport default globalConsts","import axios from 'axios';\n\nvar globalFuncs = {};\n\n//#region Server request\n\nvar processServiceResult = function(data, successFunction, errorFunction) {\n    if (data) {\n        data = data.data;\n        if (data.Error) {\n            console.log('Error in response');\n            if (data.Error.text.toUpperCase() === 'SESSION EXPIRED'){\n                // go to session expired page\n            }\n\n            if (errorFunction) {\n                errorFunction(data.Error);\n            }\n        } else {\n            if (successFunction) {\n                successFunction(data);\n            }\n        }\n    } else {\n        console.log('Something went wrong with response');\n    }\n}\n\nglobalFuncs.sendRequest = function(type, methodName, JSONdata, successFunction, errorFunction, stringifyNeeded = false) {\n    let body;\n    if (stringifyNeeded) {\n        body = JSONdata != null ? JSON.stringify(JSONdata) : null;\n    } else {\n        body = JSONdata;\n    }\n\n    switch(type){\n        case 'POST': {\n            axios.post(`http://${process.env.IP}${process.env.NODE_ENV === 'development-3000' ? ':4000' : ':2093/api'}${methodName}`, body)\n            .then(res => {\n                processServiceResult(res, successFunction, errorFunction);\n            })\n            .catch(err => {\n                if (!err.isAxiosError) {\n                    processServiceResult(err.response, successFunction, errorFunction);\n                }\n            });\n            break;\n        }\n        case 'PUT': {\n            axios.put(`http://${process.env.IP}${process.env.NODE_ENV === 'development-3000' ? ':4000' : ':2093/api'}${methodName}`, body)\n            .then(res => {\n                processServiceResult(res, successFunction, errorFunction);\n            })\n            .catch(err => {\n                if (!err.isAxiosError) {\n                    processServiceResult(err.response, successFunction, errorFunction);\n                }\n            });\n            break;\n        }\n        case 'GET': {\n            axios.get(`http://${process.env.IP}${process.env.NODE_ENV === 'development-3000' ? ':4000' : ':2093/api'}${methodName}`, body)\n            .then(res => {\n                processServiceResult(res, successFunction, errorFunction);\n            })\n            .catch(err => {\n                if (!err.isAxiosError) {\n                    processServiceResult(err.response, successFunction, errorFunction);\n                }\n            });\n            break;\n        }\n        case 'DELETE': {\n            axios.delete(`http://${process.env.IP}${process.env.NODE_ENV === 'development-3000' ? ':4000' : ':2093/api'}${methodName}`, body)\n            .then(res => {\n                processServiceResult(res, successFunction, errorFunction);\n            })\n            .catch(err => {\n                if (!err.isAxiosError) {\n                    processServiceResult(err.response, successFunction, errorFunction);\n                }\n            });\n            break;\n        }\n        default: return;\n    }\n    \n}\n\n//#endregion\n\n//#region Tokens\n\nglobalFuncs.getToken = function() {\n    return sessionStorage.getItem('token') || null;\n}\n\nglobalFuncs.removeUserSession = function() {\n    sessionStorage.removeItem('token');\n}\n\nglobalFuncs.setUserSession = function(token) {\n    sessionStorage.setItem('token', token);\n}\n\n//#endregion\n\n//#region Redux global functions\n\nglobalFuncs.mapStateToProps_global = function(state) {\n    const {\n        dataForPage,\n        visibilityOfLoadingPanel,\n        initializedContext,\n        error\n    } = state;\n\n    return {\n        isLoading: visibilityOfLoadingPanel.isLoading,\n        context: initializedContext,\n        dataForPage,\n        error\n    }\n}\n\n//#endregion\n\nexport default globalFuncs","/* (ignored) */","/* (ignored) */"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AACA;AAGA;AAUA;AACA;AACA;AAKA;AACA;AACA;AAOA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAOA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AANA;AAQA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAXA;AAaA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AACA;AATA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;AC7HA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAlCA;AAwCA;AACA;AACA;AADA;AADA;AACA;AAOA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAjDA;AAoDA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AChIA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}